// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BuyClubList_Request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BuyClubList_Request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace quote {

void protobuf_ShutdownFile_BuyClubList_5fRequest_2eproto() {
  delete BuyClubList_Request::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_BuyClubList_5fRequest_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_BuyClubList_5fRequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  BuyClubList_Request::default_instance_ = new BuyClubList_Request();
  BuyClubList_Request::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BuyClubList_5fRequest_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_BuyClubList_5fRequest_2eproto_once_);
void protobuf_AddDesc_BuyClubList_5fRequest_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_BuyClubList_5fRequest_2eproto_once_,
                 &protobuf_AddDesc_BuyClubList_5fRequest_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BuyClubList_5fRequest_2eproto {
  StaticDescriptorInitializer_BuyClubList_5fRequest_2eproto() {
    protobuf_AddDesc_BuyClubList_5fRequest_2eproto();
  }
} static_descriptor_initializer_BuyClubList_5fRequest_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int BuyClubList_Request::kClassTypeFieldNumber;
const int BuyClubList_Request::kReqFieldsFieldNumber;
const int BuyClubList_Request::kSortFieldFieldNumber;
const int BuyClubList_Request::kSortOrderFieldNumber;
const int BuyClubList_Request::kReqBeginFieldNumber;
const int BuyClubList_Request::kReqSizeFieldNumber;
const int BuyClubList_Request::kReqFlagFieldNumber;
const int BuyClubList_Request::kUserIdFieldNumber;
#endif  // !_MSC_VER

BuyClubList_Request::BuyClubList_Request()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:quote.BuyClubList_Request)
}

void BuyClubList_Request::InitAsDefaultInstance() {
}

BuyClubList_Request::BuyClubList_Request(const BuyClubList_Request& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:quote.BuyClubList_Request)
}

void BuyClubList_Request::SharedCtor() {
  _cached_size_ = 0;
  class_type_ = 0;
  sort_field_ = 0;
  sort_order_ = false;
  req_begin_ = 0u;
  req_size_ = 0u;
  req_flag_ = 0u;
  user_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyClubList_Request::~BuyClubList_Request() {
  // @@protoc_insertion_point(destructor:quote.BuyClubList_Request)
  SharedDtor();
}

void BuyClubList_Request::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void BuyClubList_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BuyClubList_Request& BuyClubList_Request::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_BuyClubList_5fRequest_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_BuyClubList_5fRequest_2eproto();
#endif
  return *default_instance_;
}

BuyClubList_Request* BuyClubList_Request::default_instance_ = NULL;

BuyClubList_Request* BuyClubList_Request::New() const {
  return new BuyClubList_Request;
}

void BuyClubList_Request::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BuyClubList_Request*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 253) {
    ZR_(class_type_, user_id_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  req_fields_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool BuyClubList_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:quote.BuyClubList_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 class_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class_type_)));
          set_has_class_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_req_fields;
        break;
      }

      // repeated int32 req_fields = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_req_fields:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_req_fields())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_req_fields())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sort_field;
        break;
      }

      // required int32 sort_field = 3;
      case 3: {
        if (tag == 24) {
         parse_sort_field:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sort_field_)));
          set_has_sort_field();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sort_order;
        break;
      }

      // required bool sort_order = 4;
      case 4: {
        if (tag == 32) {
         parse_sort_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sort_order_)));
          set_has_sort_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_req_begin;
        break;
      }

      // required uint32 req_begin = 5;
      case 5: {
        if (tag == 40) {
         parse_req_begin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &req_begin_)));
          set_has_req_begin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_req_size;
        break;
      }

      // required uint32 req_size = 6;
      case 6: {
        if (tag == 48) {
         parse_req_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &req_size_)));
          set_has_req_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_req_flag;
        break;
      }

      // optional uint32 req_flag = 7;
      case 7: {
        if (tag == 56) {
         parse_req_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &req_flag_)));
          set_has_req_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_user_id;
        break;
      }

      // optional uint64 user_id = 8 [default = 0];
      case 8: {
        if (tag == 64) {
         parse_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:quote.BuyClubList_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:quote.BuyClubList_Request)
  return false;
#undef DO_
}

void BuyClubList_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:quote.BuyClubList_Request)
  // required int32 class_type = 1;
  if (has_class_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->class_type(), output);
  }

  // repeated int32 req_fields = 2 [packed = true];
  if (this->req_fields_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_req_fields_cached_byte_size_);
  }
  for (int i = 0; i < this->req_fields_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->req_fields(i), output);
  }

  // required int32 sort_field = 3;
  if (has_sort_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sort_field(), output);
  }

  // required bool sort_order = 4;
  if (has_sort_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sort_order(), output);
  }

  // required uint32 req_begin = 5;
  if (has_req_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->req_begin(), output);
  }

  // required uint32 req_size = 6;
  if (has_req_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->req_size(), output);
  }

  // optional uint32 req_flag = 7;
  if (has_req_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->req_flag(), output);
  }

  // optional uint64 user_id = 8 [default = 0];
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->user_id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:quote.BuyClubList_Request)
}

int BuyClubList_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 class_type = 1;
    if (has_class_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->class_type());
    }

    // required int32 sort_field = 3;
    if (has_sort_field()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sort_field());
    }

    // required bool sort_order = 4;
    if (has_sort_order()) {
      total_size += 1 + 1;
    }

    // required uint32 req_begin = 5;
    if (has_req_begin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->req_begin());
    }

    // required uint32 req_size = 6;
    if (has_req_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->req_size());
    }

    // optional uint32 req_flag = 7;
    if (has_req_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->req_flag());
    }

    // optional uint64 user_id = 8 [default = 0];
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

  }
  // repeated int32 req_fields = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->req_fields_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->req_fields(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _req_fields_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyClubList_Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BuyClubList_Request*>(&from));
}

void BuyClubList_Request::MergeFrom(const BuyClubList_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  req_fields_.MergeFrom(from.req_fields_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_class_type()) {
      set_class_type(from.class_type());
    }
    if (from.has_sort_field()) {
      set_sort_field(from.sort_field());
    }
    if (from.has_sort_order()) {
      set_sort_order(from.sort_order());
    }
    if (from.has_req_begin()) {
      set_req_begin(from.req_begin());
    }
    if (from.has_req_size()) {
      set_req_size(from.req_size());
    }
    if (from.has_req_flag()) {
      set_req_flag(from.req_flag());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void BuyClubList_Request::CopyFrom(const BuyClubList_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyClubList_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003d) != 0x0000003d) return false;

  return true;
}

void BuyClubList_Request::Swap(BuyClubList_Request* other) {
  if (other != this) {
    std::swap(class_type_, other->class_type_);
    req_fields_.Swap(&other->req_fields_);
    std::swap(sort_field_, other->sort_field_);
    std::swap(sort_order_, other->sort_order_);
    std::swap(req_begin_, other->req_begin_);
    std::swap(req_size_, other->req_size_);
    std::swap(req_flag_, other->req_flag_);
    std::swap(user_id_, other->user_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string BuyClubList_Request::GetTypeName() const {
  return "quote.BuyClubList_Request";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace quote

// @@protoc_insertion_point(global_scope)
